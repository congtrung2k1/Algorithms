#include <iostream>
#include <algorithm>
#include <vector>
#include <math.h>
#include <string.h>

using namespace std;

struct point {
    int x, y;
};

bool cmp(point a, point b) {
    return a.x < b.x || (a.x == b.x && a.y < b.y);
}

bool clockwise(point a, point b, point c) {
    return a.x*(b.y-c.y)+b.x*(c.y-a.y)+c.x*(a.y-b.y) < 0;
}

double length(point a, point b) {
    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));
}

double triangle_area(point p1, point p2, point p3) {
    double a = length(p1, p2), b = length(p2, p3), c = length(p3, p1), p = (a+b+c)/2;
    return sqrt(p*(p-a)*(p-b)*(p-c));
}

int main() {
    int n;
    cin >> n;
    point tmp[n];
    for (int i = 0; i < n; i++)
        cin >> tmp[i].x >> tmp[i].y;
    sort(tmp, tmp+n, cmp);
    vector <point> p;
    p.push_back(tmp[0]);
    for (int i = 1; i < n-1; i++)
        if (clockwise(tmp[0], tmp[i], tmp[n-1]))
            p.push_back(tmp[i]);
    p.push_back(tmp[n-1]);
    for (int i = n-2; i > 0; i--)
        if (clockwise(tmp[n-1], tmp[i], tmp[0]))
            p.push_back(tmp[i]);
    double area = 0;
    for (int i = 1; i < n-1; i++)
        area += triangle_area(p[0], p[i], p[i+1]);
    cout << area;
    return 0;
}















#include <iostream>
#include <algorithm>
#include <vector>
#include <math.h>
#include <string.h>

using namespace std;

struct point {
    int x, y;
};

bool cmp(point a, point b) {
    return a.x < b.x || (a.x == b.x && a.y < b.y);
}

bool clockwise(point a, point b, point c) {
    return a.x*(b.y-c.y)+b.x*(c.y-a.y)+c.x*(a.y-b.y) < 0;
}

int main() {
    int n;
    cin >> n;
    point tmp[n];
    for (int i = 0; i < n; i++)
        cin >> tmp[i].x >> tmp[i].y;
    sort(tmp, tmp+n, cmp);
    vector <point> p;
    p.push_back(tmp[0]);
    for (int i = 1; i < n-1; i++)
        if (clockwise(tmp[0], tmp[i], tmp[n-1]))
            p.push_back(tmp[i]);
    p.push_back(tmp[n-1]);
    for (int i = n-2; i > 0; i--)
        if (clockwise(tmp[n-1], tmp[i], tmp[0]))
            p.push_back(tmp[i]);
    double area = 0;
    for (int i = 0; i < n; i++)
        area += (double) (p[(i+1)%n].x-p[i].x)*(p[(i+1)%n].y+p[i].y)/2;
    cout << area;
    return 0;
}